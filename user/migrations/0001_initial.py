# Generated by Django 5.0 on 2024-09-17 20:13

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import user.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('cart', '0001_initial'),
        ('service', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seen', models.BooleanField(default=False, null=True, verbose_name='بررسی شده')),
                ('issue', models.CharField(max_length=255, null=True, verbose_name='موضوع')),
                ('email_phone', models.CharField(max_length=100, null=True, verbose_name='ایمیل / شماره تماس')),
                ('text', models.TextField(null=True, verbose_name='متن')),
            ],
            options={
                'verbose_name': 'انتقاد و پیشنهاد و شکایت',
                'verbose_name_plural': 'انتقادات پیشنهادات شکایات',
            },
        ),
        migrations.CreateModel(
            name='RegisterCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=user.models.generate_random_char, max_length=12, verbose_name='کد دعوت')),
            ],
            options={
                'verbose_name': 'کد دعوت',
                'verbose_name_plural': 'کد دعوت',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('head_admin', models.BooleanField(default=False, verbose_name='ادمین کل')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='نام')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='نام خانوادگی')),
                ('sex', models.CharField(choices=[('male', 'مرد'), ('female', 'زن')], default='male', max_length=255, verbose_name='جنسیت')),
                ('number', models.CharField(max_length=11, null=True, unique=True, verbose_name='شماره همراه')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user/profile', verbose_name='عکس')),
                ('otp', models.CharField(blank=True, default='112233', max_length=6, null=True, verbose_name='رمز یکبار مصرف')),
                ('otp_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='زمان ایجاد otp')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='ایمیل')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='کد پستی')),
                ('register_code', models.CharField(max_length=50, verbose_name='کد معرف')),
                ('national_code', models.CharField(max_length=10, verbose_name='کد ملی')),
                ('national_card_image', models.ImageField(blank=True, null=True, upload_to='user/profile', verbose_name='تصویر کارت ملی')),
                ('qrcode', models.ImageField(blank=True, null=True, upload_to='user/qrcode', verbose_name='QRCODE')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='service.city', verbose_name='شهر')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='service.province', verbose_name='استان')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
                'ordering': ('-id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CityManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_access', models.BooleanField(default=False, verbose_name='دسترسی به قیمت ها')),
                ('order_access', models.BooleanField(default=False, verbose_name='دسترسی به تیکت ها')),
                ('allowed_categories', models.ManyToManyField(blank=True, null=True, related_name='accessible_cities', to='service.homecarecategory', verbose_name='دسته های خدمات قابل دسترسی')),
                ('city', models.ManyToManyField(to='service.city', verbose_name='شهر')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manager', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'مدیر',
                'verbose_name_plural': 'مدیران شهری',
            },
        ),
        migrations.CreateModel(
            name='HomeCareCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_plus', models.BooleanField(default=False, null=True, verbose_name='عضو سینانس پلاس')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='نام شرکت')),
                ('pay_later', models.BooleanField(default=False, help_text='با فعال کردن این گزینه مشتریان این شرکت می توانند پرداخت در محل داشته باشند', verbose_name='پرداخت در محل')),
                ('allowed_categories', models.ManyToManyField(blank=True, null=True, related_name='accessible_companies', to='service.homecarecategory', verbose_name='دسته های خدمات قابل دسترسی')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='service.city', verbose_name='شهر')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_owner', to=settings.AUTH_USER_MODEL, verbose_name='مدیر شرکت')),
            ],
            options={
                'verbose_name': 'شرکت',
                'verbose_name_plural': 'شرکت ها',
            },
        ),
        migrations.CreateModel(
            name='CompanyManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_manager', to=settings.AUTH_USER_MODEL, verbose_name='ادمین شرکت')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.homecarecompany', verbose_name='شرکت')),
            ],
            options={
                'verbose_name': 'ادمین',
                'verbose_name_plural': 'ادمین شرکت ها',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_company', to='user.homecarecompany', verbose_name='شرکت'),
        ),
        migrations.AddField(
            model_name='user',
            name='first_company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_first_company', to='user.homecarecompany', verbose_name='زیر مجموعه شرکت'),
        ),
        migrations.AddField(
            model_name='user',
            name='invite_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.registercode', verbose_name='کد دعوت من'),
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='حذف شده ؟')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='عنوان')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='نام')),
                ('province', models.CharField(blank=True, max_length=60, null=True, verbose_name='استان')),
                ('city', models.CharField(max_length=60, verbose_name='شهر')),
                ('address', models.TextField(verbose_name='آدرس')),
                ('zip_code', models.CharField(blank=True, max_length=30, null=True, verbose_name='کد پستی')),
                ('number', models.CharField(blank=True, max_length=30, null=True, verbose_name='شماره تماس')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'آدرس کاربر',
                'verbose_name_plural': 'آدرس کاربر',
            },
        ),
        migrations.CreateModel(
            name='UserBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='تاریخ ایجاد')),
                ('paid', models.BooleanField(default=False, verbose_name='تسویه شده')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='سود')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cart.homecareorder', verbose_name='سفارش')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'سود کاربر',
                'verbose_name_plural': 'سودهای کاربر',
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='موضوع')),
                ('text', models.TextField(null=True, verbose_name='متن')),
                ('is_checked', models.BooleanField(default=False, verbose_name='بررسی شده')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sender_messages', to=settings.AUTH_USER_MODEL, verbose_name='فرستنده')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_messages', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'پیام',
                'verbose_name_plural': 'پیام های کاربر',
            },
        ),
    ]
